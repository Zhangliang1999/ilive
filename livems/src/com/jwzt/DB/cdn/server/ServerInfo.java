package com.jwzt.DB.cdn.server;

// Generated 2006-6-12 17:08:20 by Hibernate Tools 3.1.0 beta3

import com.jwzt.DB.cdn.region.RegionInfo;
import com.jwzt.DB.cdn.serverGroup.ServerGroupInfo;
import java.util.Calendar;

/**
 * ServerInfo generated by hbm2java
 */

public class ServerInfo implements java.io.Serializable
{

	// Fields

	/**
	 * 服务器ID
	 */
	private Integer server_id;

	/**
	 * 服务器组ID
	 */
	private ServerGroupInfo server_group;

	/**
	 * 服务器组区域ID
	 */
	private RegionInfo server_region;

	/**
	 * 服务器名称
	 */
	private String server_name;

	/**
	 * 服务器地址
	 */
	private String address;

	/**
	 * ftp地址
	 */
	private String ftp_address;

	/**
	 * 服务器平台 0:windows 1:unix 2:linux
	 */
	private Integer platform;

	/**
	 * 服务器类型 1:Media 2:Real
	 */
	private Integer type;

	/**
	 * 服务器模式 0:附从模式 1:主模式(1,因为公用一个磁盘，那么内容只需有主模式上传一次)
	 */
	private Integer mode;

	/**
	 * 日志路径
	 */
	private String logPath;

	/**
	 * 处理器数目
	 */
	private Integer number_of_cpu;

	/**
	 * 内存大小(M)
	 */
	private Integer memory_size;

	/**
	 * 服务器的带宽(Kbps)
	 */
	private Integer band_width;

	/**
	 * FTP用户名
	 */
	private String ftp_user;

	/**
	 * FTP用户密码
	 */
	private String ftp_pwd;

	/**
	 * 服务器的最大连接数
	 */
	private Integer loadbalance;

	/**
	 * CPU使用情况
	 */
	private Float monitor_cpu;

	/**
	 * 内存使用情况
	 */
	private Float monitor_mem;

	/**
	 * 带宽情况(Kbps)
	 */
	private Integer monitor_band_width;

	/**
	 * 连接数
	 */
	private Integer monitor_connections;

	/**
	 * 最新更新
	 */
	private Calendar last_updated;
	
	/**
	 * 磁盘使用情况
	 */
	private String disksinfo;
	
	/**
	 * 服务器管理端口
	 */
	private Integer manage_port;

	// Constructors

	/** default constructor */
	public ServerInfo()
	{
		this.monitor_cpu = (float)0;
		this.monitor_mem = (float)0;
		this.monitor_band_width = 0;
		this.monitor_connections = 0;
		this.number_of_cpu = 1;
		this.memory_size = -1;
		this.disksinfo = "";
	}

	/** minimal constructor */
	public ServerInfo(Integer server_id)
	{
		this.server_id = server_id;
		this.monitor_cpu = (float)0;
		this.monitor_mem = (float)0;
		this.monitor_band_width = 0;
		this.monitor_connections = 0;
		this.number_of_cpu = 1;
		this.memory_size = -1;
	}

	/** full constructor */
	public ServerInfo(Integer server_id, ServerGroupInfo server_group,
			RegionInfo server_region, String server_name, String address,
			String ftp_address, Integer platform, Integer type, Integer mode,
			String logPath, Integer number_of_cpu, Integer memory_size,
			Integer band_width, String ftp_user, String ftp_pwd,
			Integer loadbalance, Float monitor_cpu, Float monitor_mem,
			Integer monitor_band_width, Integer monitor_connections,
			Calendar last_updated)
	{
		this.server_id = server_id;
		this.server_group = server_group;
		this.server_region = server_region;
		this.server_name = server_name;
		this.address = address;
		this.ftp_address = ftp_address;
		this.platform = platform;
		this.type = type;
		this.mode = mode;
		this.logPath = logPath;
		this.number_of_cpu = number_of_cpu;
		this.memory_size = memory_size;
		this.band_width = band_width;
		this.ftp_user = ftp_user;
		this.ftp_pwd = ftp_pwd;
		this.loadbalance = loadbalance;
		this.monitor_cpu = monitor_cpu;
		this.monitor_mem = monitor_mem;
		this.monitor_band_width = monitor_band_width;
		this.monitor_connections = monitor_connections;
		this.last_updated = last_updated;
	}

	// Property accessors
	/**
	 * * 服务器ID
	 */

	public Integer getServer_id()
	{
		return this.server_id;
	}

	public void setServer_id(Integer server_id)
	{
		this.server_id = server_id;
	}

	/**
	 * * 服务器组ID
	 */

	public ServerGroupInfo getServer_group()
	{
		return this.server_group;
	}

	public void setServer_group(ServerGroupInfo server_group)
	{
		this.server_group = server_group;
	}

	/**
	 * * 服务器组区域ID
	 */

	public RegionInfo getServer_region()
	{
		return this.server_region;
	}

	public void setServer_region(RegionInfo server_region)
	{
		this.server_region = server_region;
	}

	/**
	 * * 服务器名称
	 */

	public String getServer_name()
	{
		return this.server_name;
	}

	public void setServer_name(String server_name)
	{
		this.server_name = server_name;
	}

	/**
	 * * 服务器地址
	 */

	public String getAddress()
	{
		return this.address;
	}

	public void setAddress(String address)
	{
		this.address = address;
	}

	/**
	 * * ftp地址
	 */

	public String getFtp_address()
	{
		return this.ftp_address;
	}

	public void setFtp_address(String ftp_address)
	{
		this.ftp_address = ftp_address;
	}

	/**
	 * * 服务器平台 0:windows 1:unix 2:linux
	 */

	public Integer getPlatform()
	{
		return this.platform;
	}

	public void setPlatform(Integer platform)
	{
		this.platform = platform;
	}

	/**
	 * * 服务器类型 1:Media 2:Real
	 */

	public Integer getType()
	{
		return this.type;
	}

	public void setType(Integer type)
	{
		this.type = type;
	}

	/**
	 * * 服务器模式 0:附从模式 1:主模式(1,因为公用一个磁盘，那么内容只需有主模式上传一次)
	 */

	public Integer getMode()
	{
		return this.mode;
	}

	public void setMode(Integer mode)
	{
		this.mode = mode;
	}

	/**
	 * * 日志路径
	 */

	public String getLogPath()
	{
		return this.logPath;
	}

	public void setLogPath(String logPath)
	{
		this.logPath = logPath;
	}

	/**
	 * * 处理器数目
	 */

	public Integer getNumber_of_cpu()
	{
		return this.number_of_cpu;
	}

	public void setNumber_of_cpu(Integer number_of_cpu)
	{
		this.number_of_cpu = number_of_cpu;
	}

	/**
	 * * 内存大小(M)
	 */

	public Integer getMemory_size()
	{
		return this.memory_size;
	}

	public void setMemory_size(Integer memory_size)
	{
		this.memory_size = memory_size;
	}

	/**
	 * * 服务器的带宽(Kbps)
	 */

	public Integer getBand_width()
	{
		return this.band_width;
	}

	public void setBand_width(Integer band_width)
	{
		this.band_width = band_width;
	}

	/**
	 * * FTP用户名
	 */

	public String getFtp_user()
	{
		return this.ftp_user;
	}

	public void setFtp_user(String ftp_user)
	{
		this.ftp_user = ftp_user;
	}

	/**
	 * * FTP用户密码
	 */

	public String getFtp_pwd()
	{
		return this.ftp_pwd;
	}

	public void setFtp_pwd(String ftp_pwd)
	{
		this.ftp_pwd = ftp_pwd;
	}

	/**
	 * * 服务器的最大连接数
	 */

	public Integer getLoadbalance()
	{
		return this.loadbalance;
	}

	public void setLoadbalance(Integer loadbalance)
	{
		this.loadbalance = loadbalance;
	}

	/**
	 * * CPU使用情况
	 */

	public Float getMonitor_cpu()
	{
		return this.monitor_cpu;
	}

	public void setMonitor_cpu(Float monitor_cpu)
	{
		this.monitor_cpu = monitor_cpu;
	}

	/**
	 * * 内存使用情况
	 */

	public Float getMonitor_mem()
	{
		return this.monitor_mem;
	}

	public void setMonitor_mem(Float monitor_mem)
	{
		this.monitor_mem = monitor_mem;
	}

	/**
	 * * 带宽情况(Kbps)
	 */

	public Integer getMonitor_band_width()
	{
		return this.monitor_band_width;
	}

	public void setMonitor_band_width(Integer monitor_band_width)
	{
		this.monitor_band_width = monitor_band_width;
	}

	/**
	 * * 连接数
	 */

	public Integer getMonitor_connections()
	{
		return this.monitor_connections;
	}

	public void setMonitor_connections(Integer monitor_connections)
	{
		this.monitor_connections = monitor_connections;
	}

	/**
	 * * 最新更新
	 */

	public Calendar getLast_updated()
	{
		return this.last_updated;
	}

	public void setLast_updated(Calendar last_updated)
	{
		this.last_updated = last_updated;
	}

	public String getDisksinfo() {
		return disksinfo;
	}

	public void setDisksinfo(String disksinfo) {
		this.disksinfo = disksinfo;
	}

	public Integer getManage_port() {
		return manage_port;
	}

	public void setManage_port(Integer manage_port) {
		this.manage_port = manage_port;
	}

	
}
